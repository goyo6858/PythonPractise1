#Ch10-P12 镜像字符串


L=[]
for i in range(1,100000):
  if str(i).count('0')+str(i).count('1')+str(i).count('8')+str(i).count('6')+str(i).count('9')==len(str(i)) and str(i).count('6')==str(i).count('9'): #仅包含01869且6数量等于9
      if str(i).count('6')==0 and str(i)==str(i)[ : :-1]: #不含69则须是回文
        L.append(i)
      elif str(i).count('6')+str(i).count('9')==len(str(i)): #仅含69则须6-9位置对称
        #若使用for循环要避免元素重复添加
        f1=0 #计数初始化/复位
        for j in range(len(str(i))):
          if abs(int(str(i)[j])-int(str(i)[len(str(i))-j-1]))==3: #对称位置差值为3
            f1=f1+1
          else:
            f1=0
          if f1==len(str(i)):
            L.append(i)
      elif len(str(i))>str(i).count('6')>0: #包含6和9及其它数字，其它数字为回文
        L1=[] #记录69以外的其它数字
        for k in str(i):
          if k!='6' and k!='9':
            L1.append(k)
          else:
            L1.append('*') #必须将69替换为符号，否则会出现169、1169这样的情况
        s=''.join(L1)
        if s==s[ : :-1] :
          L.append(i)
L.sort()
print(L)


'''
L=[]
for i in range(1,100000):
  if str(i).count('0')+str(i).count('1')+str(i).count('8')+str(i).count('6')+str(i).count('9')==len(str(i)) and str(i).count('6')==str(i).count('9'):
    L.append(i)
print(L)
'''
'''
L=[i in range(1,100000) for str(i).count('0')+str(i).count('1')+str(i).count('8')+str(i).count('6')+str(i).count('9')==len(str(i))]
print(L)
'''
'''
L=[]
for i in range(1,100000):
    if str(i).count('1')+str(i).count('0')+str(i).count('8')==len(str(i)) and \
       str(i)==str(i)[ : :-1]:
        L.append(i)

    elif str(i).count('1')+str(i).count('0')+str(i).count('8')+str(i).count('6')+str(i).count('9')==len(str(i))\
         and str(i).count('6')==str(i).count('9')>0:
        L.append(i)

L.sort()
#print(L)

L1=[]
for j in L:
    if str(j).count('6')==0 or str(j).index('6')==str(j)[ : :-1].index('9'):
        L1.append(j)
L1.sort()
#print(L1)

L2=[]
for k in L1:
    if str(k).count('6')==0:
        L2.append(k)
    elif str(k).count('0')>0 and str(k).index('0')==str(k)[ : :-1].index('0')and str(k).count('6')>0:
        L2.append(k)
    elif str(k).count('1')>0 and str(k).index('1')==str(k)[ : :-1].index('1')and str(k).count('6')>0:
        L2.append(k)
    elif str(k).count('8')>0 and str(k).index('8')==str(k)[ : :-1].index('8')and str(k).count('6')>0:
        L2.append(k)
    elif str(k).count('6')+str(k).count('9')==len(str(k)) and str(k).count('6')>0:
        L2.append(k)
L2.sort()
print(L2)
'''

'''
n='0169' #仅含有0169且0及1对称，6和9互为镜像的数满足条件
L=[] #记录目标数字
L1=[] #记录仅含0169的数字

#找出仅含0169的数字
for i in range(100000):
  c=0 #记录0169数字的个数，并在循环开始时复位
  for j in str(i):
    if j in n:
      c=c+1
    else:
      c=0
    if c==len(str(i)): #全部为0169
      L1.append(i)

#找出L1中的回文——回出现66，99这样的结果，需要进一步过滤//不如找出69互为镜像的数字
for k in L1:
  if str(k)==str(k)[ : :-1]:
    L.append(k)
print(L)
#找出L1中6与9互为镜像的数字
#排序
'''
    
  
